# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Fetch newest laws from RIS

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 6 * * *'  # Run at 6:00 AM UTC every day

jobs:
  fetch-laws:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm install
    
    - name: Set up environment variables
      working-directory: ./backend
      run: |
        echo "PORT=3000" >> .env
        echo "GOOGLE_GENAI_API_KEY=${{ secrets.GOOGLE_GENAI_API_KEY }}" >> .env
    
    - name: Create Firebase service account file
      working-directory: ./backend
      run: |
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > serviceAccountKey.json
    
    - name: Create simple fetch script
      working-directory: ./backend
      run: |
        cat > fetch-laws.js << 'EOF'
        import * as notificationService from './src/service/notificationService.js';

        // Simple script to fetch legal notifications
        async function main() {
          console.log('==== Starting RIS notification fetch process ====');
          
          try {
            // 1. Federal notifications
            console.log('\n[1/2] Fetching federal notifications...');
            const federalResult = await notificationService.fetchLatestNotifications();
            
            // Display federal notifications
            console.log(`\nFetched ${federalResult.count} federal notifications (${federalResult.new} new):`);
            federalResult.notifications.forEach((notification, index) => {
              console.log(`[${index + 1}] ${notification.id}`);
            });
            
            // 2. State notifications
            console.log('\n[2/2] Fetching state notifications...');
            const stateResult = await notificationService.fetchStateNotifications();
            
            // Display state notifications
            console.log(`\nFetched ${stateResult.count} state notifications (${stateResult.new} new):`);
            stateResult.notifications.forEach((notification, index) => {
              console.log(`[${index + 1}] ${notification.id}`);
            });
            
            console.log('\n==== All notifications successfully fetched and stored ====');
          } catch (error) {
            console.error(`\n❌ ERROR: ${error.message}`);
            console.error(error.stack);
            process.exit(1);
          }
        }

        // Run and handle errors
        main().catch(err => {
          console.error(`\n❌ FATAL ERROR: ${err.message}`);
          process.exit(1);
        });
        EOF
    
    - name: Run fetch script
      working-directory: ./backend
      run: node fetch-laws.js
